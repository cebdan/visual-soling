# Minimal Visual Solving V2 Launcher
# –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã V2

import sys
import os
from PyQt6.QtWidgets import QApplication, QMainWindow, QVBoxLayout, QWidget, QPushButton, QTextEdit, QMessageBox
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont

def test_v2_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ V2 —Å–∏—Å—Ç–µ–º—ã"""
    try:
        from variable_system_v2 import ExpressionParser, V2Solution, demo_new_syntax
        print("‚úÖ variable_system_v2 –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True, "variable_system_v2"
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ variable_system_v2: {e}")
        return False, str(e)

def test_advanced_v2_imports():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤ advanced V2"""
    try:
        from visual_solving_advanced_v2 import HybridBoxSolution, v2_solution_manager
        print("‚úÖ visual_solving_advanced_v2 –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return True, "visual_solving_advanced_v2"
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ visual_solving_advanced_v2: {e}")
        return False, str(e)

class MinimalV2Window(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("Visual Solving V2 - Minimal Launcher")
        self.setGeometry(100, 100, 800, 600)
        
        self.setup_ui()
        self.test_system()
    
    def setup_ui(self):
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        layout = QVBoxLayout()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QTextEdit()
        title.setHtml("""
        <h1 style='color: #2c3e50;'>üöÄ Visual Solving V2 - System Test</h1>
        <p style='color: #7f8c8d;'>–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—Ç–µ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã V2</p>
        """)
        title.setMaximumHeight(100)
        title.setReadOnly(True)
        layout.addWidget(title)
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        self.info_panel = QTextEdit()
        self.info_panel.setFont(QFont("Courier", 10))
        layout.addWidget(self.info_panel)
        
        # –ö–Ω–æ–ø–∫–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        btn_test_core = QPushButton("üîß Test Core V2 System")
        btn_test_core.clicked.connect(self.test_core_system)
        layout.addWidget(btn_test_core)
        
        btn_test_demo = QPushButton("üéØ Run V2 Demo")
        btn_test_demo.clicked.connect(self.run_v2_demo)
        layout.addWidget(btn_test_demo)
        
        btn_test_ui = QPushButton("üñ•Ô∏è Test V2 UI")
        btn_test_ui.clicked.connect(self.test_v2_ui)
        layout.addWidget(btn_test_ui)
        
        central_widget.setLayout(layout)
    
    def test_system(self):
        """–ù–∞—á–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"""
        info = "=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ V2 ===\n\n"
        
        # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤
        info += "1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤:\n"
        
        success1, msg1 = test_v2_imports()
        info += f"   variable_system_v2: {'‚úÖ' if success1 else '‚ùå'} {msg1}\n"
        
        success2, msg2 = test_advanced_v2_imports()
        info += f"   visual_solving_advanced_v2: {'‚úÖ' if success2 else '‚ùå'} {msg2}\n"
        
        # –¢–µ—Å—Ç PyQt6
        info += f"\n2. PyQt6 —Å–∏—Å—Ç–µ–º–∞: ‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n"
        
        # –§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        info += f"\n3. –§–∞–π–ª—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:\n"
        files = [
            "variable_system_v2.py",
            "visual_solving_advanced_v2.py", 
            "visual_solving_ui_advanced_v2.py",
            "run_advanced_demo_v2.py"
        ]
        
        for file in files:
            exists = os.path.exists(file)
            info += f"   {file}: {'‚úÖ' if exists else '‚ùå'}\n"
        
        info += f"\n4. –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã: {'üü¢ –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï' if success1 and success2 else 'üî¥ –¢–†–ï–ë–£–ï–¢ –ù–ê–°–¢–†–û–ô–ö–ò'}\n"
        
        self.info_panel.setText(info)
    
    def test_core_system(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —è–¥—Ä–∞ V2 —Å–∏—Å—Ç–µ–º—ã"""
        try:
            from variable_system_v2 import demo_new_syntax
            
            # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
            import io
            from contextlib import redirect_stdout
            
            captured_output = io.StringIO()
            with redirect_stdout(captured_output):
                demo_new_syntax()
            
            output = captured_output.getvalue()
            
            result_text = "=== –¢–ï–°–¢ –Ø–î–†–ê V2 –°–ò–°–¢–ï–ú–´ ===\n\n"
            result_text += "‚úÖ –Ø–¥—Ä–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!\n\n"
            result_text += "–†–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:\n"
            result_text += "-" * 40 + "\n"
            result_text += output
            
            self.info_panel.setText(result_text)
            
        except Exception as e:
            error_text = f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —è–¥—Ä–∞:\n{str(e)}"
            self.info_panel.setText(error_text)
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —è–¥—Ä–∞ V2:\n{str(e)}")
    
    def run_v2_demo(self):
        """–ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ V2"""
        try:
            from visual_solving_advanced_v2 import demo_hybrid_system
            
            # –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
            import io
            from contextlib import redirect_stdout
            
            captured_output = io.StringIO()
            with redirect_stdout(captured_output):
                demo_hybrid_system()
            
            output = captured_output.getvalue()
            
            result_text = "=== –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ì–ò–ë–†–ò–î–ù–û–ô –°–ò–°–¢–ï–ú–´ V2 ===\n\n"
            result_text += "‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!\n\n"
            result_text += "–†–µ–∑—É–ª—å—Ç–∞—Ç:\n"
            result_text += "-" * 40 + "\n"
            result_text += output
            
            self.info_panel.setText(result_text)
            
        except Exception as e:
            error_text = f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:\n{str(e)}"
            self.info_panel.setText(error_text)
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ V2:\n{str(e)}")
    
    def test_v2_ui(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ UI V2"""
        try:
            from visual_solving_ui_advanced_v2 import V2AdvancedMainWindow
            
            self.ui_window = V2AdvancedMainWindow()
            self.ui_window.show()
            
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "‚úÖ UI V2 –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n–û–∫–Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è.")
            
        except Exception as e:
            error_text = f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ UI V2:\n{str(e)}"
            self.info_panel.setText(error_text)
            QMessageBox.critical(self, "–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ UI V2:\n{str(e)}")

def main():
    app = QApplication(sys.argv)
    app.setStyle('Fusion')
    
    window = MinimalV2Window()
    window.show()
    
    sys.exit(app.exec())

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–µ—Ä–∞ Visual Solving V2...")
    main()
